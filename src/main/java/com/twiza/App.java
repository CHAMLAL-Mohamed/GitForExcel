/*
 * Copyright  2020  Chamlal.Mohamed
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.twiza;


import com.twiza.domain.EWorkbook;
import com.twiza.utils.ExcelReader;
import com.twiza.utils.ExcelWriter;

import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

public class App {
    private static String oldFilePath = "C:\\Users\\mohamed.chamlal\\.gitforexcel\\TestFiles\\old.xlsx";
    private static String newFilePath = "C:\\Users\\mohamed.chamlal\\.gitforexcel\\TestFiles\\new.xlsx";
    private static String diffFilePath = "C:\\Users\\mohamed.chamlal\\.gitforexcel\\TestFiles\\diff.xlsx";


    //IDEA: redesign Reading functionality to be more versatile and provide more capabilities via configurations.
    //IDEA: if order during comparison doesn't matter, sort the entire rows( as each row is a string) then start comparing.
    //IDEA: this version will include only workbook with cached sheet values, no style, formula, external links are supported
    //BRAINSTORMING: workbook can be represented as a folder with special tag(excelFile),
    // that contains sheet as textFiles inside( check if styles
    public static void main(String[] args) {
        try {
            /**
             *  ignore patterns can be divided in 4 categories:
             *  componentName and file
             *  componentName and folder
             *  @see {@link C:/Users/MOHAME~1.CHA/AppData/Local/Temp/progit.pdf} page 37
             *  @see {@link https://stackoverflow.com/questions/52389140/global-git-ignore-with-absolute-path/52390413#52390413}
             *  @see {@link https://stackoverflow.com/questions/58758204/git-not-ignoring-sub-directories/58758400#58758400}
             *  relativePath and folder
             *  relativePath and file
             *  So if we have a leading slash: append the root folder and match with absolutePaths
             *  if there is no leading slash : match starting from current directory
             */
            List<String> patternToIgnore = new ArrayList<>();
            patternToIgnore.add("*\\Sheet*");
            EWorkbook oldWorkbook = ExcelReader.getInstance().read(Paths.get(oldFilePath), patternToIgnore, false);
            oldWorkbook.getSheets()
                    .values()
                    .forEach(eSheet -> eSheet.adoptFirstRowAsHeaders(true));
            EWorkbook newWorkbook = ExcelReader.getInstance().read(Paths.get(newFilePath), patternToIgnore, false);
            newWorkbook.getSheets()
                    .values()
                    .forEach(eSheet -> eSheet.adoptFirstRowAsHeaders(true));
            EWorkbook diffWorkbook = newWorkbook.compare(oldWorkbook);
            ExcelWriter.getInstance().writeToWorkbook(diffFilePath,diffWorkbook);



//           ExcelToFolderWriter.getInstance().write(oldWorkbook);
//            FolderToExcelReader.getInstance().read(Paths.get("C:\\Users\\mohamed.chamlal\\.gitforexcel\\TestFiles\\new"));
//            ExcelWriter.getInstance().writeToWorkbook(diffFilePath, oldWorkbook);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }


}
